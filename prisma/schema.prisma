generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model product {
  id             Int             @id @default(autoincrement())
  name           String          @db.VarChar(45)
  image          String?         @db.VarChar(45)
  amount         Int
  type           String?         @db.VarChar(45)
  size           Int?         
  color          String?         @db.VarChar(45)
  category       String          @db.VarChar(45)
  shopping_price Decimal?          @db.Decimal(10,2)
  created_at     DateTime        @default(now()) @db.Timestamp(0)
  updated_at     DateTime        @updatedAt @db.Timestamp(0)
  sales_price    Decimal           @db.Decimal(10,2)
  salesitens     salesitens[]
  shoppingitens  shoppingitens[]
}

model sales {
  id                Int          @id @default(autoincrement())
  description       String?      @db.VarChar(45)
  total_gross_value Decimal        @db.Decimal(10,2)
  total_net_value   Decimal        @db.Decimal(10,2)
  additional        Decimal?       @db.Decimal(10,2)
  discount          Decimal?       @db.Decimal(10,2)
  coast             Decimal        @db.Decimal(10,2)
  payment_method    String?      @db.VarChar(45)
  sales_date        DateTime     @default(now()) @db.Timestamp(0)
  salesitens        salesitens[]
  profit            profits?
}

model salesitens {
  id         Int     @id @default(autoincrement())
  salesId    Int
  productId  Int
  amount     Int
  unit_price Decimal   @db.Decimal(10,2)
  sub_total  Decimal   @db.Decimal(10,2)
  product    product @relation(fields: [productId], references: [id], map: "SalesItens_productId_fkey")
  sales      sales   @relation(fields: [salesId], references: [id], map: "SalesItens_salesId_fkey")

  @@unique([salesId, productId], map: "SalesItens_salesId_productId_key")
  @@index([productId], map: "SalesItens_productId_fkey")
}

model shopping {
  id             Int             @id @default(autoincrement())
  description    String?         @db.VarChar(45)
  total_value    Decimal           @db.Decimal(10,2)
  shopping_date  DateTime        @default(now()) @db.Timestamp(0)
  payment_method String?         @db.VarChar(45)
  installment    Int?
  tax            Int?
  shoppingitens  shoppingitens[]
}

model shoppingitens {
  id         Int      @id @default(autoincrement())
  shoppingId Int
  productId  Int
  amount     Int
  unit_price Decimal    @db.Decimal(10,2)
  sub_total  Decimal    @db.Decimal(10,2)
  product    product  @relation(fields: [productId], references: [id], map: "ShoppingItens_productId_fkey")
  shopping   shopping @relation(fields: [shoppingId], references: [id], map: "ShoppingItens_shoppingId_fkey")

  @@unique([shoppingId, productId], map: "ShoppingItens_shoppingId_productId_key")
  @@index([productId], map: "ShoppingItens_productId_fkey")
}

model profits {
  id         Int      @id @default(autoincrement())
  salesId    Int      @unique
  day        DateTime @default(now()) @db.Timestamp(0)
  profit_day Decimal    @db.Decimal(10,2)

  sale sales @relation(fields: [salesId], references: [id])
}
